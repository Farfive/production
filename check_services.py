#!/usr/bin/env python3
"""
SERVICE STATUS CHECKER
Check if both backend and frontend services are running
"""

import requests
import time
import webbrowser
from datetime import datetime

def check_backend():
    """Check if backend is running"""
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        if response.status_code == 200:
            data = response.json()
            return True, f"‚úÖ Backend: {data.get('status', 'unknown')} - {data.get('service', 'Manufacturing Platform API')}"
        else:
            return False, f"‚ùå Backend: HTTP {response.status_code}"
    except requests.exceptions.RequestException as e:
        return False, f"‚ùå Backend: Not responding ({str(e)[:50]}...)"

def check_frontend():
    """Check if frontend is running"""
    try:
        response = requests.get("http://localhost:3000", timeout=5)
        if response.status_code == 200:
            return True, "‚úÖ Frontend: React app running"
        else:
            return False, f"‚ùå Frontend: HTTP {response.status_code}"
    except requests.exceptions.RequestException as e:
        return False, f"‚ùå Frontend: Not responding ({str(e)[:50]}...)"

def main():
    print("=" * 60)
    print("üîç MANUFACTURING PLATFORM - SERVICE STATUS CHECK")
    print("=" * 60)
    print(f"‚è∞ Check time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # Check services
    backend_ok, backend_msg = check_backend()
    frontend_ok, frontend_msg = check_frontend()
    
    print("üìä SERVICE STATUS:")
    print(f"   {backend_msg}")
    print(f"   {frontend_msg}")
    print()
    
    if backend_ok and frontend_ok:
        print("üéâ ALL SERVICES ARE RUNNING!")
        print()
        print("üåê ACCESS POINTS:")
        print("   ‚Ä¢ Main App:     http://localhost:3000")
        print("   ‚Ä¢ Backend API:  http://localhost:8000")
        print("   ‚Ä¢ API Docs:     http://localhost:8000/docs")
        print()
        print("üè† HOMEPAGE FEATURES:")
        print("   ‚Ä¢ Beautiful landing page with animations")
        print("   ‚Ä¢ Modern UI with glassmorphism effects")
        print("   ‚Ä¢ Responsive design for all devices")
        print("   ‚Ä¢ Professional branding and messaging")
        print("   ‚Ä¢ Call-to-action buttons for registration")
        print("   ‚Ä¢ Feature showcase and testimonials")
        print()
        print("üöÄ READY FOR PRODUCTION!")
        print("   ‚Ä¢ Database cleaned of active users")
        print("   ‚Ä¢ Fresh start for new user registrations")
        print("   ‚Ä¢ All UI components loaded and styled")
        print()
        
        # Ask if user wants to open the browser
        try:
            open_browser = input("üåê Open homepage in browser? (y/n): ").lower().strip()
            if open_browser in ['y', 'yes', '']:
                print("üîó Opening http://localhost:3000...")
                webbrowser.open("http://localhost:3000")
        except KeyboardInterrupt:
            print("\nüëã Goodbye!")
            
    else:
        print("‚ö†Ô∏è  SOME SERVICES ARE NOT READY")
        print()
        if not backend_ok:
            print("üîß BACKEND TROUBLESHOOTING:")
            print("   ‚Ä¢ Check if Python virtual environment is activated")
            print("   ‚Ä¢ Run: cd backend && python main.py")
            print("   ‚Ä¢ Check for any error messages in the backend window")
            print()
        
        if not frontend_ok:
            print("üîß FRONTEND TROUBLESHOOTING:")
            print("   ‚Ä¢ Check if Node.js is installed")
            print("   ‚Ä¢ Run: cd frontend && npm install && npm start")
            print("   ‚Ä¢ Check for any error messages in the frontend window")
            print()
        
        print("üí° TIP: Use start_services.bat to start both services automatically")

if __name__ == "__main__":
    main() 